SEMAPHORE(I=0) =
	
	SEMAPHORE[I],

	SEMAPHORE[ b : 0..1 ] =
	    ( up -> SEMAPHORE[1]
		| when b == 1 down -> SEMAPHORE[0] ).

||PAPER =

	( paper:SEMAPHORE(0) ).

||TOBACCO =

	( tobacco:SEMAPHORE(0) ).

||SPARK =

	( spark:SEMAPHORE(0) ).

||RESOURCES =

	(  PAPER
	|| TOBACCO
	|| SPARK ).

AGATHA =

	( agatha.selects ->
	  paper.up ->
	  spark.up ->  AGATHA

	| agatha.selects ->
	  spark.up ->
	  tobacco.up -> AGATHA

	| agatha.selects ->
	  tobacco.up ->
	  paper.up -> AGATHA ).

||CONSTRAINTS =

	( agatha.select:SEMAPHORE(1) )
	
	/{
	   agatha.selects/agatha.select.down,
	   { horacio, arthur, edgar }.stubs.out/agatha.select.up
	}.

COUNTER(N=0) =

    COUNTER[0],

    COUNTER[ value: 0..N ] =
    
        ( when value <= N-1 increment[1] -> COUNTER[value+1]
		| when value <= N-2 increment[2] -> COUNTER[value+2]
		| when value <= N-4 increment[4] -> COUNTER[value+4]
		| read[ value ] -> COUNTER[ value ]
		| reset -> COUNTER[0] ).

||CACHED =

    ( forall[i: 1..6] items.cached[i]:SEMAPHORE(0) || items.cached:COUNTER(6) )

    /{
        cache.tobacco.items.cached.increment[1]/items.cached.increment[1],
        cache.paper.items.cached.increment[2]/items.cached.increment[2],
        cache.spark.items.cached.increment[4]/items.cached.increment[4],
        cache.{ tobacco, paper, spark }.items.cached[i: 1..6].up/items.cached.read[i],
        cache.{ tobacco, paper, spark }.items.cached[i: 1..6].up/items.cached[i].up,
        { horacio, arthur, edgar }.items.cached.reset/items.cached.reset,
        horacio.items.cached[6].down/items.cached[6].down,
        arthur.items.cached[5].down/items.cached[5].down,
        edgar.items.cached[3].down/items.cached[3].down
    }
	
	\{
        items.cached.read[0],
        items.cached[1].down,
        items.cached[2].down,
        items.cached[4].down
    }.

||MUTEX =

    ( mutex:SEMAPHORE(1) )
    
    /{
        { cache.tobacco, cache.paper, cache.spark }.mutex.down/mutex.down,
        { cache.tobacco, cache.paper, cache.spark }.mutex.up/mutex.up
    }.

CACHE_TOBACCO =

    ( tobacco.down ->
      cache.tobacco.mutex.down ->
      cache.tobacco.items.cached.increment[1] ->
      cache.tobacco.items.cached[1..6].up ->
      cache.tobacco.mutex.up -> CACHE_TOBACCO ).

CACHE_PAPER =

    ( paper.down ->
      cache.paper.mutex.down ->
      cache.paper.items.cached.increment[2] ->
      cache.paper.items.cached[1..6].up ->
      cache.paper.mutex.up -> CACHE_PAPER ).

CACHE_SPARK =

    ( spark.down ->
      cache.spark.mutex.down ->
      cache.spark.items.cached.increment[4] ->
      cache.spark.items.cached[1..6].up ->
      cache.spark.mutex.up -> CACHE_SPARK ).

||CACHING =

    ( CACHE_TOBACCO || CACHE_PAPER || CACHE_SPARK || CACHED ).

HORACIO =

	( horacio.items.cached[6].down ->
	  horacio.items.cached.reset ->
	  horacio.smokes ->
	  horacio.stubs.out -> HORACIO ).

ARTHUR =

	( arthur.items.cached[5].down ->
	  arthur.items.cached.reset ->
	  arthur.smokes ->
	  arthur.stubs.out -> ARTHUR ).

EDGAR =

	( edgar.items.cached[3].down ->
	  edgar.items.cached.reset ->
	  edgar.smokes ->
	  edgar.stubs.out -> EDGAR ).

||MYSTERY_WRITERS =

	(  RESOURCES
	|| AGATHA
	|| CACHING || MUTEX
	|| HORACIO || ARTHUR || EDGAR
	|| CONSTRAINTS ).
